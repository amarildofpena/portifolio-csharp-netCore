// <auto-generated />
using System;
using CoreDatabase.Source.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreDatabase.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CoreDatabase.Source.Model.Tibia.Attributes", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("Itemid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("key");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("value");

                    b.HasKey("id");

                    b.HasIndex("Itemid");

                    b.ToTable("attributes");
                });

            modelBuilder.Entity("CoreDatabase.Source.Model.Tibia.House", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("beds")
                        .HasColumnType("int")
                        .HasColumnName("beds");

                    b.Property<int?>("bid")
                        .HasColumnType("int")
                        .HasColumnName("bid");

                    b.Property<int?>("bid_end")
                        .HasColumnType("int")
                        .HasColumnName("bid_end");

                    b.Property<int?>("highest_bidder")
                        .HasColumnType("int")
                        .HasColumnName("highest_bidder");

                    b.Property<int?>("last_bid")
                        .HasColumnType("int")
                        .HasColumnName("last_bid");

                    b.Property<string>("name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("owner")
                        .HasColumnType("int")
                        .HasColumnName("owner");

                    b.Property<int?>("paid")
                        .HasColumnType("int")
                        .HasColumnName("paid");

                    b.Property<int?>("rent")
                        .HasColumnType("int")
                        .HasColumnName("rent");

                    b.Property<int?>("size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<int?>("town_id")
                        .HasColumnType("int")
                        .HasColumnName("town_id");

                    b.Property<int?>("warnings")
                        .HasColumnType("int")
                        .HasColumnName("warnings");

                    b.HasKey("id");

                    b.ToTable("houses");
                });

            modelBuilder.Entity("CoreDatabase.Source.Model.Tibia.Item", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("article")
                        .HasColumnType("longtext")
                        .HasColumnName("article");

                    b.Property<string>("fromid")
                        .HasColumnType("longtext")
                        .HasColumnName("fromid");

                    b.Property<string>("name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("toid")
                        .HasColumnType("longtext")
                        .HasColumnName("toid");

                    b.HasKey("id");

                    b.ToTable("items");
                });

            modelBuilder.Entity("CoreDatabase.Source.Model.Tibia.Attributes", b =>
                {
                    b.HasOne("CoreDatabase.Source.Model.Tibia.Item", null)
                        .WithMany("attribute")
                        .HasForeignKey("Itemid");
                });

            modelBuilder.Entity("CoreDatabase.Source.Model.Tibia.Item", b =>
                {
                    b.Navigation("attribute");
                });
#pragma warning restore 612, 618
        }
    }
}
